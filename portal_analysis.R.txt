#download.file command
#takes address of the data
#takes destination locally
#click Run to make this run
#don't forget to make a folder for data
download.file("https://ndownloader.figshare.com/files/2292169",
              "data/portal_data_joined.csv")
#assign to the surveys variable the data
#read data with read.csv
surveys <- read.csv('data/portal_data_joined.csv')
head(surveys)
tail(surveys)

#here's some information
dim(surveys)
nrow(surveys)
ncol(surveys)
colnames(surveys)
rownames(surveys)
summary(surveys)

#get mean weight
#you need get the weight column then calc mean
#get rid of NAs
mean(surveys$weight, na.rm = TRUE)

#get weight in kg
#new column
#weight/1000
surveys$weight_kg <- surveys$weight/1000

#install.packages('dplyr') if needed
library(dplyr)
#calculate mean weight for each sex
#first group by category
#then send to a command using a pipe %>%
#summarise is the general command for summary stats

#this is one example of split-apply-combine
survey_mweight <- group_by(surveys,sex) %>%
  summarise(mean_weight=mean(weight,na.rm=TRUE))

#calculate mean weight for each sp/sex
survey_mweight2 <- surveys %>% 
  group_by(sex,species_id) %>%
  summarise(mean_weight=mean(weight,na.rm=TRUE),
            max_weight=max(weight,na.rm=TRUE))

#example of filter command in the pipe
#filter out rows where weight is na
survey_mweight3 <- surveys %>%
  filter(!is.na(weight)) %>%
  group_by(sex,species_id) %>%
  summarise(mean_weight=mean(weight,na.rm=TRUE),
            max_weight=max(weight,na.rm=TRUE))

#count number in each category
surveys %>% group_by(sex) %>% tally
