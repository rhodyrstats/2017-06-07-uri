#download.file command
#takes address of the data
#takes destination locally
#click Run to make this run
#don't forget to make a folder for data
download.file("https://ndownloader.figshare.com/files/2292169",
              "data/portal_data_joined.csv")
#assign to the surveys variable the data
#read data with read.csv
surveys <- read.csv('data/portal_data_joined.csv')
head(surveys)
tail(surveys)

#here's some information
dim(surveys)
nrow(surveys)
ncol(surveys)
colnames(surveys)
rownames(surveys)
summary(surveys)

#get mean weight
#you need get the weight column then calc mean
#get rid of NAs
mean(surveys$weight, na.rm = TRUE)

#get weight in kg
#new column
#weight/1000
surveys$weight_kg <- surveys$weight/1000

#install.packages('dplyr') if needed
library(dplyr)
#calculate mean weight for each sex
#first group by category
#then send to a command using a pipe %>%
#summarise is the general command for summary stats

#this is one example of split-apply-combine
survey_mweight <- group_by(surveys,sex) %>%
  summarise(mean_weight=mean(weight,na.rm=TRUE))

#calculate mean weight for each sp/sex
survey_mweight2 <- surveys %>% 
  group_by(sex,species_id) %>%
  summarise(mean_weight=mean(weight,na.rm=TRUE),
            max_weight=max(weight,na.rm=TRUE))

#example of filter command in the pipe
#filter out rows where weight is na
survey_mweight3 <- surveys %>%
  filter(!is.na(weight)) %>%
  group_by(sex,species_id) %>%
  summarise(mean_weight=mean(weight,na.rm=TRUE),
            max_weight=max(weight,na.rm=TRUE))

#count number in each category
surveys %>% group_by(sex) %>% tally

#**Challenge**
#1. How many individuals were caught in 
#each plot type?
surveys %>% group_by(plot_type) %>% tally

#2. What are the mean, min, and max hindfoot
#lengths for each species?

ch2 <- surveys %>%
  filter(!is.na(hindfoot_length)) %>%
  group_by(species_id) %>%
  summarise(mean_hindfoot=mean(hindfoot_length, na.rm = TRUE),
            max_hindfoot=max(hindfoot_length, na.rm = TRUE),
            min_hindfoot=min(hindfoot_length, na.rm = TRUE))

#3. What was the heaviest animal each year?
#Give the year, genus, species, and weight

#max for year-genus-sp_id combos
surveys_heavy <- surveys %>%
  filter(!is.na(weight)) %>%
  group_by(year,genus,species_id) %>%
  summarise(max_weight=max(weight)) 

#max for year (but not additional info)
ch3 <- surveys %>%
  filter(!is.na(weight)) %>%
  group_by(year) %>%
  summarise(max_weight=mean(weight, na.rm = TRUE))

#Factors
str(surveys)
levels(surveys$sex)
levels(surveys$sex)[1]<-"missing"
surveys$sex
plot(surveys$sex)
levels(surveys$sex) <- c("missing","Female","Male")
surveys$sex <- factor(surveys$sex,
                      levels=c("Female","Male","missing"))

#Dates
#install.packages('lubridate')
library(lubridate)
surveys$date<-ymd(paste(surveys$year,surveys$month,surveys$day, sep="-"))
surveys[is.na(surveys$date),2:4]

#Challenge
#calculate mean weight by genus/plot_id
surveys_gw <- surveys %>%
  filter(!is.na(weight)) %>%
  group_by(genus,plot_id) %>%
  summarise(meanweight = mean(weight))

#convert to wide format
library(tidyr)
surveys_gw_wide <- surveys_gw %>%
  spread(genus,meanweight,fill=0)
#fill=0 (instead of default NA is your
#decision)

surveys_gw_long <- surveys_gw_wide %>%
  gather(genus,mean_weight,-plot_id) %>%
  filter(mean_weight >0)
#filter out 0 or NA

##Challenge
#1. Make a wide frame with plot_id
#(rows), year (cols), values = number
#of genera
#hint: n_distinct gives the number
#of unique types

#get number of genera for plot_id/year
surveys_g <- surveys %>%
  group_by(plot_id,year) %>%
  summarise(ngen = n_distinct(genus))
surveys_g_wide<-surveys_g %>% 
  spread(plot_id,ngen)

#2. convert it back to long format
surveys_g_long <- surveys_g_wide %>%
  gather(plot_id,ngen,-year)

